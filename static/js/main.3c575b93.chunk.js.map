{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","memo","todos","selectedId","onSelected","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","selectStatus","onSelectStatus","query","onQueryChange","reset","onSubmit","event","preventDefault","value","onChange","placeholder","target","style","pointerEvents","role","tabIndex","onKeyDown","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterStatus","getUser","userId","TodoModal","selectedTodo","onClose","useState","user","setUser","requestUser","a","useEffect","href","email","name","handleQuery","todoTitle","toLowerCase","includes","App","setTodos","setSelectedTodo","filteredStatus","setFilteredStatus","setQuery","handelSelectedTodo","todoId","find","requestedTodos","handleStatus","useCallback","handleQueryChange","filteredTodos","useMemo","filter","COMPLETED","ACTIVE","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c575b93.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedId?: number,\n  onSelected: (userId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = memo(({\n  todos,\n  selectedId,\n  onSelected,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={cn(\n              { 'has-background-info-light': todo.id === selectedId },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn('',\n                  { 'has-text-success': todo.completed },\n                  { 'has-text-danger': !todo.completed })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelected(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far',\n                    { 'fa-eye': todo.id !== selectedId },\n                    { 'fa-eye-slash': todo.id === selectedId })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { memo } from 'react';\n\ntype Props = {\n  selectStatus: string,\n  onSelectStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  query: string,\n  onQueryChange: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = memo(({\n  selectStatus,\n  onSelectStatus,\n  query,\n  onQueryChange,\n}) => {\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const handleTodo = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChange(event.target.value);\n  };\n\n  const reset = () => {\n    onQueryChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={handleSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectStatus}\n            onChange={onSelectStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleTodo}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <i\n              aria-label=\"text\"\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={reset}\n              data-cy=\"clearSearchButton\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nenum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nfunction handleQuery(todoTitle: string, query: string) {\n  return todoTitle.toLowerCase().includes(query.toLowerCase());\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filteredStatus, setFilteredStatus] = useState<string>('all');\n  const [query, setQuery] = useState<string>('');\n\n  const handelSelectedTodo = (todoId: number | null) => (\n    todoId\n      ? (setSelectedTodo(todos.find(todo => todo.id === todoId) || null))\n      : setSelectedTodo(null)\n  );\n\n  const requestedTodos = async () => (\n    setTodos(await getTodos())\n  );\n\n  useEffect(() => {\n    requestedTodos();\n  }, []);\n\n  const handleStatus = useCallback((event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilteredStatus(event.target.value);\n  }, []);\n\n  const handleQueryChange = useCallback((value: string) => {\n    setQuery(value);\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (filteredStatus) {\n        case FilterStatus.COMPLETED: {\n          return todo.completed && handleQuery(todo.title, query);\n        }\n\n        case FilterStatus.ACTIVE: {\n          return !todo.completed && handleQuery(todo.title, query);\n        }\n\n        default:\n          return handleQuery(todo.title, query);\n      }\n    });\n  }, [todos, query, filteredStatus]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectStatus={filteredStatus}\n                onSelectStatus={handleStatus}\n                query={query}\n                onQueryChange={handleQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedId={selectedTodo?.id}\n                  onSelected={handelSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={handelSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState, memo } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo,\n  onClose: (id: number | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = memo(({ selectedTodo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const requestUser = async () => {\n    setUser(await getUser(userId));\n  };\n\n  const onCloseButton = () => onClose(null);\n\n  useEffect(() => {\n    requestUser();\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseButton}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}